"use strict";
globalThis["webpackHotUpdatemovies_db"]("components-FavoriteButton-FavoriteButton-stories",{

/***/ "./src/components/FavoriteButton/FavoriteButton.tsx":
/*!**********************************************************!*\
  !*** ./src/components/FavoriteButton/FavoriteButton.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
function _array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function _iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _sliced_to_array(arr, i) {
    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}


var FavoriteButton = function(param) {
    var title = param.title, color = param.color;
    var _useState = _sliced_to_array((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), 2), isFavorite = _useState[0], setIsFavorite = _useState[1];
    var ButtonClass = classnames__WEBPACK_IMPORTED_MODULE_1___default()({
        "text-white font-bold text-center p-2 border-2 border-blue-300 rounded-lg w-fit h-fit": true,
        "bg-blue-700 hover:bg-blue-900": !isFavorite,
        "bg-rose-700 hover:bg-rose-900": isFavorite
    });
    var handleOnClick = function() {
        setIsFavorite(!isFavorite);
    };
    var titleValue = isFavorite ? "☹︎ Remove from favorites" : "♥︎ Add to favorites";
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
        onClick: handleOnClick,
        className: ButtonClass
    }, " ", titleValue, " ");
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FavoriteButton);
FavoriteButton.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "FavoriteButton",
    "props": {
        "title": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "color": {
            "required": true,
            "tsType": {
                "name": "union",
                "raw": "'blue' | 'red'",
                "elements": [
                    {
                        "name": "literal",
                        "value": "'blue'"
                    },
                    {
                        "name": "literal",
                        "value": "'red'"
                    }
                ]
            },
            "description": ""
        }
    }
};


/***/ })

});
//# sourceMappingURL=components-FavoriteButton-FavoriteButton-stories.82e0448e5d65f5d63114.hot-update.js.map