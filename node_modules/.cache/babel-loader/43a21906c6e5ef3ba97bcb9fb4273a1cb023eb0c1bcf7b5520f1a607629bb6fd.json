{"ast":null,"code":"var _jsxFileName = \"/Users/journey/Documents/movies-db/src/pages/Home/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MovieCard } from \"../../components/MovieCard\";\nimport { getPopularMovies } from \"../../services/movies/getPopularMovies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [popularmovies, setPopularMovies] = useState([]);\n  const [loadingpopular, setLoading] = useState(false);\n  const [popularerrorMovies, setErorMovies] = useState(false);\n  const getPopular = async () => {\n    await getPopularMovies().then(res => {\n      if (res && res.data) {\n        console.log(res.data.results, \"res\");\n        setPopularMovies(res.data.results);\n      }\n    }).catch(err => {\n      setErorMovies(true);\n    });\n    setLoading(false);\n  };\n  useEffect(() => {\n    setLoading(true);\n    getPopular();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 mx-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl text-gray-800 font-semibold my-6 mx-7\",\n      children: \"POPULAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loadingpopular && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this), popularerrorMovies && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 mx-5\",\n      children: (popularmovies === null || popularmovies === void 0 ? void 0 : popularmovies.length) > 0 && popularmovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movieId: movie.id,\n          posterPath: movie.poster_path,\n          title: movie.title,\n          genreId: movie.genre_ids[0],\n          voteAverage: movie.vote_average\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl text-gray-800 font-semibold my-6 mx-10\",\n      children: \"TOP RATED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl text-gray-800 font-semibold my-6 mx-10\",\n      children: \"NOW PLAYING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"7YDi2tVi8GbYqJO7veIWm9vLRpw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","MovieCard","getPopularMovies","jsxDEV","_jsxDEV","Home","_s","popularmovies","setPopularMovies","loadingpopular","setLoading","popularerrorMovies","setErorMovies","getPopular","then","res","data","console","log","results","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","movie","movieId","id","posterPath","poster_path","title","genreId","genre_ids","voteAverage","vote_average","_c","$RefreshReg$"],"sources":["/Users/journey/Documents/movies-db/src/pages/Home/Home.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { MovieCard } from \"../../components/MovieCard\";\nimport { movies } from \"../../constants/moviesMock\";\nimport { getPopularMovies } from \"../../services/movies/getPopularMovies\";\n\nconst Home = () => {\n  const [popularmovies, setPopularMovies] = useState<any[]>([]);\n  const [loadingpopular, setLoading] = useState<boolean>(false);\n  const [popularerrorMovies, setErorMovies] = useState<boolean>(false);\n\n  const getPopular = async () => {\n    await getPopularMovies()\n    .then((res) => {\n      if (res && res.data) {\n        console.log(res.data.results, \"res\");\n        setPopularMovies(res.data.results);\n      }\n    }) \n    .catch((err) => {\n      setErorMovies(true);\n    });\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getPopular();\n  }, []);\n\n  return (\n    <div className=\"grid grid-cols-1 mx-1\">\n      <h1 className=\"text-3xl text-gray-800 font-semibold my-6 mx-7\">POPULAR</h1>\n      {loadingpopular && <div>Loading...</div>}\n      {popularerrorMovies && <div>Error...</div>}\n      <div className='grid grid-cols-5 mx-5'>\n      {popularmovies?.length > 0 && \n        popularmovies.map((movie) => (\n          <div className=\"\"><MovieCard\n            key={movie.id}\n            movieId={movie.id}\n            posterPath={movie.poster_path}\n            title={movie.title}\n            genreId={movie.genre_ids[0]}\n            voteAverage={movie.vote_average}\n          /></div>\n        ))\n      }\n        </div>\n        <h1 className=\"text-3xl text-gray-800 font-semibold my-6 mx-10\">TOP RATED</h1>\n        <h1 className=\"text-3xl text-gray-800 font-semibold my-6 mx-10\">NOW PLAYING</h1>\n      </div>   \n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,SAAS,QAAQ,4BAA4B;AAEtD,SAASC,gBAAgB,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAQ,EAAE,CAAC;EAC7D,MAAM,CAACS,cAAc,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAC7D,MAAM,CAACW,kBAAkB,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAEpE,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMX,gBAAgB,CAAC,CAAC,CACvBY,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE;QACnBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACC,IAAI,CAACG,OAAO,EAAE,KAAK,CAAC;QACpCX,gBAAgB,CAACO,GAAG,CAACC,IAAI,CAACG,OAAO,CAAC;MACpC;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdT,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC;IACFF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,IAAI,CAAC;IAChBG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKkB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCnB,OAAA;MAAIkB,SAAS,EAAC,gDAAgD;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1ElB,cAAc,iBAAIL,OAAA;MAAAmB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACvChB,kBAAkB,iBAAIP,OAAA;MAAAmB,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CvB,OAAA;MAAKkB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACrC,CAAAhB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEqB,MAAM,IAAG,CAAC,IACxBrB,aAAa,CAACsB,GAAG,CAAEC,KAAK,iBACtB1B,OAAA;QAAKkB,SAAS,EAAC,EAAE;QAAAC,QAAA,eAACnB,OAAA,CAACH,SAAS;UAE1B8B,OAAO,EAAED,KAAK,CAACE,EAAG;UAClBC,UAAU,EAAEH,KAAK,CAACI,WAAY;UAC9BC,KAAK,EAAEL,KAAK,CAACK,KAAM;UACnBC,OAAO,EAAEN,KAAK,CAACO,SAAS,CAAC,CAAC,CAAE;UAC5BC,WAAW,EAAER,KAAK,CAACS;QAAa,GAL3BT,KAAK,CAACE,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG,CAAC,eACNvB,OAAA;MAAIkB,SAAS,EAAC,iDAAiD;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9EvB,OAAA;MAAIkB,SAAS,EAAC,iDAAiD;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEZ,CAAC;AAAArB,EAAA,CA/CKD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}