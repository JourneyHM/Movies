{"ast":null,"code":"var _jsxFileName = \"/Users/journey/Documents/movies-db/src/components/MovieCard/MovieCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { IMAGE_SOURCE } from '../../constants/moviesMock';\nimport { Pill } from '../Pill';\nimport genres from '../../constants/genres.json';\nimport { useNavigate } from 'react-router-dom';\nimport { ROUTES } from '../../routes/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  title,\n  genreId,\n  movieId,\n  voteAverage,\n  posterPath\n}) => {\n  _s();\n  const navigate = useNavigate();\n  // states\n  const poster = IMAGE_SOURCE + posterPath;\n  const getGenre = genreId => {\n    const genre = genres.genres.find(genre => genre.id === genreId);\n    return genre ? genre.name : genreId.toString();\n  };\n  const navigateMovies = (id, title) => {\n    navigate(`${ROUTES.SHOW}${id}`, {\n      state: {\n        title,\n        poster\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white w-64  h-96 float-left overflow-hidden block mx-3 mb-8 mr-7 relative shadow-xl rounded-lg\",\n    onClick: () => navigateMovies(movieId, title),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" bg-blue-950 shadow-xl relative float-none\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"transition duration-1000 scale-100 overflow-hidden w-64 h-96 relative max-w-none ml-0 hover:scale-125 hover:opacity-40\",\n        src: poster,\n        alt: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-lg shadow-xl absolute bottom-0 left-0 w-full h-auto opacity-100 transition-all bg-gradient-to-t from-black to-transparent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" text-white mx-2 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Pill, {\n            title: getGenre(genreId),\n            color: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs my-3\",\n          children: [\"\\u2605 \", voteAverage, \" / 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","IMAGE_SOURCE","Pill","genres","useNavigate","ROUTES","jsxDEV","_jsxDEV","MovieCard","title","genreId","movieId","voteAverage","posterPath","_s","navigate","poster","getGenre","genre","find","id","name","toString","navigateMovies","SHOW","state","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["/Users/journey/Documents/movies-db/src/components/MovieCard/MovieCard.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { IMovieCard } from './types';\r\nimport { IMAGE_SOURCE } from '../../constants/moviesMock';\r\nimport { Pill } from '../Pill';\r\nimport genres from '../../constants/genres.json';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ROUTES } from '../../routes/constants';\r\n\r\ninterface Genre {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst MovieCard: React.FC<IMovieCard> = ({\r\n  title,\r\n  genreId,\r\n  movieId,\r\n  voteAverage,\r\n  posterPath,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  // states\r\n  const poster = IMAGE_SOURCE + posterPath;\r\n\r\n  const getGenre = (genreId: number): string => {\r\n    const genre: Genre | undefined = genres.genres.find(\r\n      (genre: Genre) => genre.id === genreId\r\n    );\r\n    return genre ? genre.name : genreId.toString();\r\n  };\r\n\r\n  const navigateMovies = (id: number, title: string) => {\r\n    navigate(`${ROUTES.SHOW}${id}`, {state: {title, poster}});\r\n  };\r\n  \r\n  return (\r\n    <div className='bg-white w-64  h-96 float-left overflow-hidden block mx-3 mb-8 mr-7 relative shadow-xl rounded-lg' onClick={() => navigateMovies(movieId, title)}>\r\n      <div className=' bg-blue-950 shadow-xl relative float-none'>\r\n        <img\r\n          className='transition duration-1000 scale-100 overflow-hidden w-64 h-96 relative max-w-none ml-0 hover:scale-125 hover:opacity-40'\r\n          src={poster} alt='poster'/>\r\n      </div>\r\n      <div className='rounded-lg shadow-xl absolute bottom-0 left-0 w-full h-auto opacity-100 transition-all bg-gradient-to-t from-black to-transparent'>\r\n        <div className=' text-white mx-2 mb-6'>\r\n          <div>\r\n            <Pill\r\n              title={getGenre(genreId)}\r\n              color='red'\r\n            />\r\n          </div>\r\n          <div className='text-lg font-bold'>{title}</div>\r\n          <div className='text-xs my-3'>â˜… {voteAverage} / 10</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}