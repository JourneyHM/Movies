{"ast":null,"code":"import Config from '../config';\nimport axios from 'axios';\nconst httpInstance = axios.create({\n  baseURL: Config.API_URL\n});\nhttpInstance.interceptors.request.use(async config => {\n  const newConfig = {\n    ...config\n  };\n  return newConfig;\n});\nhttpInstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // console.log(error);\n  return Promise.reject(error);\n});\nexport default httpInstance;","map":{"version":3,"names":["Config","axios","httpInstance","create","baseURL","API_URL","interceptors","request","use","config","newConfig","response","error","Promise","reject"],"sources":["/Users/journey/Documents/movies-db/src/services/httpInstance.ts"],"sourcesContent":["import Config from '../config';\nimport axios from 'axios';\n\nconst httpInstance = axios.create({\n    baseURL: Config.API_URL,\n});\n\nhttpInstance.interceptors.request.use(\n    async (config) => {\n        const newConfig = { ...config };\n        return newConfig;\n    }\n);\n\nhttpInstance.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // console.log(error);\n        return Promise.reject(error);\n    }\n); \n\nexport default httpInstance;"],"mappings":"AAAA,OAAOA,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC9BC,OAAO,EAAEJ,MAAM,CAACK;AACpB,CAAC,CAAC;AAEFH,YAAY,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACjC,MAAOC,MAAM,IAAK;EACd,MAAMC,SAAS,GAAG;IAAE,GAAGD;EAAO,CAAC;EAC/B,OAAOC,SAAS;AACpB,CACJ,CAAC;AAEDR,YAAY,CAACI,YAAY,CAACK,QAAQ,CAACH,GAAG,CACjCG,QAAQ,IAAK;EACV,OAAOA,QAAQ;AACnB,CAAC,EACAC,KAAK,IAAK;EACP;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}